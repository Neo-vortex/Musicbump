@{
    ViewData["Title"] = "Playlist";
}
@using Microsoft.AspNetCore.Identity
@using MusicPlayer.Services.UserMusicManager
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject UserMusicService UserMusicService

<h1>Current Playlist : @ViewBag.playlistname</h1>

<div id="waveform"></div>
   <br>
<div>
    <button class="btn btn-primary"  id="playpause">⏯️</button>
    <button class="btn btn-primary" id="next">
        @{
            var songs =new List<UserSong>() ;
            try
            {
              songs = await UserMusicService.GetSongsForPlaylist(new User() {Email = User.Identity?.Name}, ViewBag.playlistname) ?? new List<UserSong>();
                if (!string.IsNullOrEmpty(ViewBag.songname))
                {
                    var song_index = songs.IndexOf(songs.Single(song => song.Name == ViewBag.songname));
                    if (  song_index != songs.Count-1)
                    {
                        <a href="/playlist/@ViewBag.playlistname/play/@songs[song_index+1].Name">⏭️</a>
                    }
                    else
                    {
                        <p1>⏭</p1>  
                    }
                }
                else
                {
                    <p1>⏭</p1>  
                }
            }
            catch (Exception e)
            {
                <p1>⏭</p1> 
            }
          
        }

    </button>
    <button class="btn btn-primary" id="previous">
        @{
            if (!string.IsNullOrEmpty(ViewBag.songname))
            {
                var song_index = songs.IndexOf(songs.Single(song => song.Name == ViewBag.songname));
                if (  song_index != 0)
                {
                    <a href="/playlist/@ViewBag.playlistname/play/@songs[song_index-1].Name">⏮️</a>
                }
                else
                {
                    <p1>⏮</p1>
                }
            }
            else
            {
                <p1>⏮</p1>
            }
        }
    </button>
    <button class="btn btn-primary"  id="muteunmute">🔇</button>
    <button  id="removesong">
        @{
            if (!string.IsNullOrEmpty(ViewBag.songname))
            {
                <a href="/playlist/@ViewBag.playlistname/songs/remove/@ViewBag.songname">Remove this song from the playlist️</a>
            }
            else
            {
                <p1>Remove this song from the playlist</p1>
            }
        }
    </button>
</div>
<br>
<div>
    <p1>Song name : <strong>@ViewBag.songname</strong> </p1>
</div>
<div>   
    @{
        if (ViewBag.size == null)
        {
            <p1>Song size : NaN</p1>
        }
        else
        {
            <p1>Song size : @ViewBag.size bytes</p1>
        }
    }
</div>
<div>
    <p1 id="songtime">Time :</p1>
</div>
<div>
    <p1 id="currentime">Current time : </p1>
</div>
<div>
    <br>
    <br>
    <h1>Songs</h1>
    <br>
    <ol >
        @{
            if (songs.Any())
            {
                foreach (var song in songs)
                {
                    <a href="/playlist/@ViewBag.playlistname/play/@song.Name">
                        <li> @song.Name</li>
                    </a>
                }
            }
            else
            {
                <h1>[This playlist is empty]</h1>
            }
        }
    </ol>
</div>
<div id="filepath" style="visibility: hidden" >@ViewBag.filepath</div>
<br>



<button >
    <a href="/playlist/@ViewBag.playlistname/remove/">
            Remove this playlist
    </a>
</button>

<button >
        <a href="/playlist/@ViewBag.playlistname/renamepage/">
            Rename this playlist
        </a>

</button>

<button >
    @Html.ActionLink("Add a new song to this playlist from local disk", "SongFromLocal", new {playlist = ViewBag.playlistname}  )  
</button>
<button >
     @Html.ActionLink("Add a new song to this playlist from online resources", "SongFromOnline", new {playlist = ViewBag.playlistname}  )
</button>
<script src='~/js/wavesurfer.js'></script>
<script src='~/js/player.js'></script>
