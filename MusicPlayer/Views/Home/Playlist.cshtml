@{
    ViewData["Title"] = "Playlist";
}
@using Microsoft.AspNetCore.Identity
@using MusicPlayer.Services.UserMusicManager
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject UserMusicService UserMusicService

<div  >
    <h1>Playlists:</h1>
    <ol >
              @{
                    List<UserPlaylist>? _playlists;
                    _playlists = (await UserMusicService.GetPlaylistForUser(new User() {Email = User.Identity?.Name}) ?? throw new InvalidOperationException()).ToList();
                    if (_playlists != null && _playlists.Any())
                    {
                        for (var i = 0; i < _playlists.Count(); i++)
                        {
                            <a href="/playlist/@_playlists[i].Name">
                                <li> @_playlists[i].Name</li>
                            </a>
                        }
                    }
                    else
                    {
                        <option value="null">[It's empty here!]</option>
                    }
                }
    </ol>

    <div>
        <button  >
               <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="CreateNewPlaylist">Create a new playlist now!</a>
        </button>
        
    </div>
</div>

@*@model UserPlaylist

@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    @Html.TextBoxFor(_playlist => _playlist.Name)
    @Html.b
}*@